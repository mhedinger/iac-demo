{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "vmadmin",
      "minLength": 1,
      "metadata": {
        "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'administrator'."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "[concat('Subscription#', subscription().subscriptionId)]",
      "metadata": {
        "description": "The password for the administrator account of the new VM and the domain"
      }
    },
    "imageSku": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "Windows server version for RD and Web servers"
      }
    },
    "adDomainName": {
      "type": "string",
      "metadata": {
        "description": "The name of the AD domain. For example contoso.com"
      },
      "defaultValue": "contoso.com"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A4",
      "allowedValues": [
        "Basic_A3",
        "Basic_A4",
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12"
      ]
    }
  },
  "variables": {
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "osDiskName": "osDisk",
    "storageAccountType": "Standard_LRS",
    "VnetName": "vnet",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('VnetName'))]",
    "subnetRef": "[concat(variables('vnetID'), '/subnets/', variables('virtualnetworkSubnet1Name'))]",
    "vmStorageAccountContainerName": "vhds",
    "adVmDeployment": "CreateAdVms",
    "adVmDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('adVmDeployment'))]",
    "deployPrimaryAdTemplateURL": "[concat(variables('adAssetLocation'),'/deployPrimaryAD.json')]",
    "deployPrimaryAd": "DeployPrimaryAd",
    "deployPrimaryAdID": "[concat('Microsoft.Resources/deployments/', variables('deployPrimaryAd'))]",
    "dnsServerPrivateIp": "10.0.0.4",
    "vnetwithDNSTemplateURL": "[concat(variables('adAssetLocation'),'/vnet-with-dns-server.json')]",
    "updateVNetDNS1": "updateVNetDNS",
    "updateVNetDNS1ID": "[concat('Microsoft.Resources/deployments/', variables('updateVNetDNS1'))]",
    "virtualnetworkPrefix": "10.0.0.0/16",
    "virtualnetworkSubnet1Name": "Subnet-1",
    "virtualnetworkSubnet1Prefix": "10.0.0.0/24",
    "adStorageName": "[concat('adsa', resourceGroup().name)]",
    "storageAccountName": "[concat('sa', resourceGroup().name)]",
    "uniqueStorageAccountContainerName": "[tolower(concat('sc', uniqueString(resourceGroup().id)))]",
    "nsgName": "iac-nsg",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
    "publicIPAddressName": "[concat('GwPIP-',resourceGroup().name)]",
    "webPublicIPAddressName": "[concat('WebPIP-',resourceGroup().name)]",
    "gwIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "webIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('webPublicIPAddressName'))]",
    "gwLBName": "[concat('gwLB',resourceGroup().name)]",
    "gwlbFE": "FrontEnd",
    "gwlbID": "[resourceId('Microsoft.Network/loadBalancers',variables('gwLBName'))]",
    "gwlbFEConfigID": "[concat(variables('gwlbID'),'/frontendIPConfigurations/',variables('gwlbFE'))]",
    "gwlbBE": "BackEnd",
    "gwBEAddressPoolID": "[concat(variables('gwlbID'),'/backendAddressPools/',variables('gwlbBE'))]",
    "assetLocation": "https://raw.githubusercontent.com/mhedinger/iac-demo/master/rds-deployment/",
    "adAssetLocation": "https://raw.githubusercontent.com/mhedinger/iac-demo/master/ad-non-ha",
    "rootAssetLocation": "https://raw.githubusercontent.com/mhedinger/iac-demo/master/",
    "scriptFolder": ".",
    "scriptFileName": "Install-IIS.ps1",
    "adTemplateURL": "[concat(variables('adAssetLocation'),'/adVmTemplate.json')]",
    "dnsPrefix": "[tolower(concat(resourceGroup().name,'dc'))]",
    "subnets": [
      {
        "name": "[variables('virtualnetworkSubnet1Name')]",
        "properties": {
          "addressPrefix": "[variables('virtualnetworkSubnet1Prefix')]",
          "networkSecurityGroup": {
            "id": "[variables('nsgID')]"
          }
        }
      }
    ]
  },
  "resources": [
    {
      "name": "[variables('nsgName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "properties": {
        "securityRules": [
          {
            "name": "rule1",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('VnetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[variables('nsgID')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('virtualnetworkPrefix')]"
          ],
          "networkSecurityGroup": {
            "id": "[variables('nsgID')]"
          }
        },
        "subnets": "[variables('subnets')]"
      }
    },
    {
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat('gw-',variables('dnsPrefix'))]"
        }
      }
    },
    {
      "name": "[variables('webPublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat('web-',variables('dnsPrefix'))]"
        }
      }
    },
    {
      "name": "[variables('gwlbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('gwIPAddressID')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('gwlbFE')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('gwIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('gwlbBE')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule01",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('gwlbFEConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('gwBEAddressPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "SourceIPProtocol",
              "probe": {
                "id": "[concat(variables('gwlbID'),'/probes/tcpProbe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 443,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ],
        "inboundNatRules": [
          {
            "name": "rdp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('gwlbFEConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 3389,
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }
        ]
      }
    },
    {
      "name": "[variables('storageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "sa"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "name": "[variables('adVmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('adTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "storageAccount": {
            "value": "[variables('adStorageName')]"
          },
          "subnetResourceId": {
            "value": "[variables('subnetRef')]"
          },
          "primaryAdIpAddress": {
            "value": "[variables('dnsServerPrivateIp')]"
          },
          "storageAccountType": {
            "value": "[variables('storageAccountType')]"
          },
          "vmName": {
            "value": "ad-vm"
          },
          "vmSize": {
            "value": "Standard_A1"
          },
          "adDNicName": {
            "value": "[concat('ADNic',resourceGroup().name)]"
          }
        }
      }
    },
    {
      "name": "[variables('deployPrimaryAd')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "[variables('adVmDeploymentID')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployPrimaryAdTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "primaryADName": {
            "value": "ad-vm"
          },
          "domainName": {
            "value": "[parameters('adDomainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocation": {
            "value": "[variables('adAssetLocation')]"
          }
        }
      }
    },
    {
      "name": "[variables('updateVNetDNS1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "[variables('deployPrimaryAdID')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetwithDNSTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('VnetName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('virtualnetworkPrefix')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "dnsServerAddress": {
            "value": [
              "[variables('dnsServerPrivateIp')]"
            ]
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "gw-nic",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('gwlbID')]",
        "[variables('adVmDeploymentID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('gwBEAddressPoolID')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('gwlbID'),'/inboundNatRules/rdp')]"
                }
              ]
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
            "[variables('dnsServerPrivateIp')]"
          ]
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "web-nic",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('adVmDeploymentID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "publicIPAddress": {
                "id": "[variables('webIPAddressID')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
            "[variables('dnsServerPrivateIp')]"
          ]
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "gw-vm",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('deployPrimaryAdID')]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "Microsoft.Network/networkInterfaces/gw-nic"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "gateway",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/','gw-vm-os-disk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces','gw-nic')]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-06-15",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "gw-vm/gateway",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', 'gw-vm')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.11",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "modulesUrl": "[concat(variables('assetLocation'),'/Configuration.zip')]",
              "configurationFunction": "Configuration.ps1\\Gateway",
              "Properties": {
                "DomainName": "[parameters('adDomainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "web-vm",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "Microsoft.Network/networkInterfaces/web-nic"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_A2"
        },
        "osProfile": {
          "computerName": "web",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/','web-vm-os-disk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces','web-nic')]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "CustomScriptExtension",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', 'web-vm')]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(variables('rootAssetLocation'), '/', variables('ScriptFolder'), '/', variables('ScriptFileName'))]"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('scriptFolder'), '/', variables('scriptFileName'))]"
            }
          }
        }
      ]
    }
  ]
}